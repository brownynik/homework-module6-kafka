// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.12.0+8c27801dc8d42ccc00997f25c0b8f45f8d4a233e
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace restaurant.com
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	/// <summary>
	/// Список блюд из ресторана.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("avrogen", "1.12.0+8c27801dc8d42ccc00997f25c0b8f45f8d4a233e")]
	public partial class DishOrder : global::Avro.Specific.ISpecificRecord
	{
		public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse(@"{""type"":""record"",""name"":""DishOrder"",""doc"":""Список блюд из ресторана."",""namespace"":""restaurant.com"",""fields"":[{""name"":""OrderID"",""doc"":""Идентификатор заказа"",""type"":""long""},{""name"":""TotalCost"",""doc"":""Полная стоимость заказа"",""type"":{""type"":""bytes"",""logicalType"":""decimal"",""precision"":16,""scale"":2}},{""name"":""CreatedAt"",""doc"":""Timestamp создания заказа"",""type"":{""type"":""long"",""logicalType"":""timestamp-millis""}},{""name"":""Dishes"",""doc"":""Список блюд"",""type"":{""type"":""array"",""items"":{""type"":""record"",""name"":""Dish"",""doc"":""Блюдо"",""namespace"":""restaurant.com"",""fields"":[{""name"":""DishName"",""type"":""string""},{""name"":""DishCost"",""type"":{""type"":""bytes"",""logicalType"":""decimal"",""precision"":16,""scale"":2}}]}}}]}");
		/// <summary>
		/// Идентификатор заказа
		/// </summary>
		private long _OrderID;
		/// <summary>
		/// Полная стоимость заказа
		/// </summary>
		private Avro.AvroDecimal _TotalCost;
		/// <summary>
		/// Timestamp создания заказа
		/// </summary>
		private System.DateTime _CreatedAt;
		/// <summary>
		/// Список блюд
		/// </summary>
		private IList<restaurant.com.Dish> _Dishes;
		public virtual global::Avro.Schema Schema
		{
			get
			{
				return DishOrder._SCHEMA;
			}
		}
		/// <summary>
		/// Идентификатор заказа
		/// </summary>
		public long OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				this._OrderID = value;
			}
		}
		/// <summary>
		/// Полная стоимость заказа
		/// </summary>
		public Avro.AvroDecimal TotalCost
		{
			get
			{
				return this._TotalCost;
			}
			set
			{
				this._TotalCost = value;
			}
		}
		/// <summary>
		/// Timestamp создания заказа
		/// </summary>
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				this._CreatedAt = value;
			}
		}
		/// <summary>
		/// Список блюд
		/// </summary>
		public IList<restaurant.com.Dish> Dishes
		{
			get
			{
				return this._Dishes;
			}
			set
			{
				this._Dishes = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.OrderID;
			case 1: return this.TotalCost;
			case 2: return this.CreatedAt;
			case 3: return this.Dishes;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.OrderID = (System.Int64)fieldValue; break;
			case 1: this.TotalCost = (Avro.AvroDecimal)fieldValue; break;
			case 2: this.CreatedAt = (System.DateTime)fieldValue; break;
			case 3: this.Dishes = (IList<restaurant.com.Dish>)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
